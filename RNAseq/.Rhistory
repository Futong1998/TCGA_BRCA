mut <- subset(mut,gene=='PIK3CA')
View(mut)
table(mut$effect)
## 取出含有'PIK3CA'信息的行
PIK3CA_sample <- unique(sort(mut$Sample_ID))
PIK3CA_sample
# https://mp.weixin.qq.com/s/MJLEZPWqzJe4LaKRDtiZQQ
# 挑选出有PIK3CA突变的样本
# 载入下载好的突变信息文件
exprSet[1:4,1:4]
table(mut$effect)
rm(list = ls())
options(stringsAsFactors = F)
load(file = 'tnbc_paired_exprSet.Rdata')
## 根据TCGA样本的命名可以区分正常组织和肿瘤样本的测序结果
group_list=ifelse(as.numeric(substr(colnames(exprSet),14,15)) < 10,
'tumor','normal')
table(group_list)
library(DESeq2)
(colData <- data.frame(row.names=colnames(exprSet),
group_list=group_list) )
dds <- DESeqDataSetFromMatrix(countData = exprSet,
colData = colData,
design = ~ group_list)
exprSet[1:4,1:4]
strsplit('ENSG00000000003.13','[.]')[[1]][1]
exprSet[1:4,1:4]
# strsplit('ENSG00000000003.13','[.]')[[1]][1]
library(stringr)
a=data.frame(V1=colnames(exprSet))
library(stringr)
class(str_split(a$V1,'[.]',simplify = T))
class(unlist(str_split(a$V1,'[.]')))
a$ensembl_id=str_split(a$V1,'[.]',simplify = T)[,1]
library(org.Hs.eg.db)
g2s=toTable(org.Hs.egSYMBOL)
g2e=toTable(org.Hs.egENSEMBL)
b=merge(a,g2e,by='ensembl_id',all.x=T)
d=merge(b,g2s,by='gene_id',all.x=T)
table(d$ensembl_id)[table(d$ensembl_id)>1]
a=data.frame(V1=rownames(exprSet))
class(str_split(a$V1,'[.]',simplify = T))
class(unlist(str_split(a$V1,'[.]')))
a$ensembl_id=str_split(a$V1,'[.]',simplify = T)[,1]
library(org.Hs.eg.db)
g2s=toTable(org.Hs.egSYMBOL)
g2e=toTable(org.Hs.egENSEMBL)
b=merge(a,g2e,by='ensembl_id',all.x=T)
d=merge(b,g2s,by='gene_id',all.x=T)
table(d$ensembl_id)[table(d$ensembl_id)>1]
d=d[order(d$V1),]
d=d[!duplicated(d$V1),]
d=d[match(a$V1,d$V1),]
head(d)
length(unique(d$symbol))
View(a)
length(unique(d$ensembl_id))
View(d)
head(duplicated(sort(d$symbol)))
sort(d$symbol)[head(!duplicated(sort(d$symbol)))]
View(d)
sort(d$symbol)[head(duplicated(sort(d$symbol)))]
sort(d$symbol)[!duplicated(sort(d$symbol))]
sort(d$symbol)[duplicated(sort(d$symbol))]
View(d)
dat=exprSet
dat[1:4,1:4]
ids$median=apply(dat,1,median)
ids=d
View(d)
ids$median=apply(dat,1,median)
ids=ids[order(ids$symbol,ids$median,decreasing = T),]
ids=ids[!duplicated(ids$symbol),]
dat=dat[ids$V1,]
rownames(dat)=ids$symbol
dat[1:4,1:4]
rownames(dat)=ids$symbol
dat[1:4,1:4]
dat=exprSet
dat[1:4,1:4]
ids=d
ids$median=apply(dat,1,median)
ids=ids[order(ids$symbol,ids$median,decreasing = T),]
ids=ids[!duplicated(ids$symbol),]
dat=dat[ids$V1,]
rownames(dat)=ids$symbol
dat[1:4,1:4]
ids$symbol
rownames(dat)=ids$symbol
rownames(dat)
str(ids)
rownames(dat)=ids$symbol
table(is.na(ids$symbol))
ids$symbol[is.na(ids$symbol)]
View(d)
ids$symbol[is.na(ids$symbol)]='na'
ids$symbol[is.na(ids$symbol)]
ids$symbol[is.na(ids$symbol)]='na'
rownames(dat)=ids$symbol
dat[1:4,1:4]
exprSet=dat
exprSet[1:4,1:4]
table(group_list)
(colData <- data.frame(row.names=colnames(exprSet),
group_list=group_list) )
dds <- DESeqDataSetFromMatrix(countData = exprSet,
colData = colData,
design = ~ group_list)
dds <- DESeqDataSetFromMatrix(countData = exprSet,
colData = colData,
design = ~ group_list)
dds <- DESeqDataSetFromMatrix(countData = as.matrix(exprSet),
colData = colData,
design = ~ group_list)
group_list
exprSet
library(DESeq2)
(colData <- data.frame(row.names=colnames(exprSet),
group_list=group_list) )
dds <- DESeqDataSetFromMatrix(countData = exprSet,
colData = colData,
design = ~ group_list)
group_list
colData
colnames(exprSet)
dds <- DESeqDataSetFromMatrix(countData = exprSet,
colData = colData,
design = ~ group_list)
library(DESeq2)
exprSet[1:4,1:4]
colnames(exprSet)
dds
library(edgeR)
d <- DGEList(counts=exprSet,group=factor(group_list))
keep <- rowSums(cpm(d)>1) >= 2
table(keep)
d <- d[keep, , keep.lib.sizes=FALSE]
d$samples$lib.size <- colSums(d$counts)
d <- calcNormFactors(d)
d$samples
dge=d
design <- model.matrix(~0+factor(group_list))
rownames(design)<-colnames(dge)
colnames(design)<-levels(factor(group_list))
dge=d
dge <- estimateGLMCommonDisp(dge,design)
dge <- estimateGLMTrendedDisp(dge, design)
dge <- estimateGLMTagwiseDisp(dge, design)
fit <- glmFit(dge, design)
# https://www.biostars.org/p/110861/
lrt <- glmLRT(fit,  contrast=c(-1,1))
nrDEG=topTags(lrt, n=nrow(dge))
nrDEG=as.data.frame(nrDEG)
head(nrDEG)
edgeR_DEG =nrDEG
nrDEG=edgeR_DEG[,c(1,5)]
colnames(nrDEG)=c('log2FoldChange','pvalue')
draw_h_v(exprSet,nrDEG,'edgeR',group_list,1)
View(nrDEG)
suppressMessages(library(limma))
design <- model.matrix(~0+factor(group_list))
colnames(design)=levels(factor(group_list))
rownames(design)=colnames(exprSet)
design
dge <- DGEList(counts=exprSet)
dge <- calcNormFactors(dge)
logCPM <- cpm(dge, log=TRUE, prior.count=3)
v <- voom(dge,design,plot=TRUE, normalize="quantile")
fit <- lmFit(v, design)
group_list
cont.matrix=makeContrasts(contrasts=c('tumor-normal'),levels = design)
fit2=contrasts.fit(fit,cont.matrix)
fit2=eBayes(fit2)
tempOutput = topTable(fit2, coef='tumor-normal', n=Inf)
DEG_limma_voom = na.omit(tempOutput)
head(DEG_limma_voom)
nrDEG=DEG_limma_voom[,c(1,4)]
colnames(nrDEG)=c('log2FoldChange','pvalue')
View(nrDEG)
View(exprSet)
exprSet['ACTL8',]
library(DESeq2)
(colData <- data.frame(row.names=colnames(exprSet),
group_list=group_list) )
dds <- DESeqDataSetFromMatrix(countData = exprSet,
colData = colData,
design = ~ group_list)
rm(list = ls())
options(stringsAsFactors = F)
library(data.table)
## 下面的文件来自于UCSC的XENA：BRCA.htseq_counts.tsv
f='/Users/jmzeng/data/public/TCGA/TCGA-BRCA.htseq_counts.tsv'
a=fread(f,sep = '\t',header = T)
a=as.data.frame(a)
a[1:4,1:4]
rownames(a)=a[,1]
a=a[,-1]
genes=rownames(a)
a[1:4,1:4]
a=2^a-1
a[1:4,1:4]
#a[1:4,1:4]
load('tnbc_s.Rdata')
tnbc_p=substring(tnbc_s,1,12)
all_p=substring(colnames(a),1,12)
tnbc_all_expr=a[,all_p %in% tnbc_p]
tnbc_all_expr[1:4,1:4]
tnbc_p
all_p %in% tnbc_p
nontnbc_all_expr=a[,!all_p %in% tnbc_p]
substring(tnbc_s,14,15)
substring(tnbc_s,14,15) == '01'
tnbc_all_expr=tnbc_all_expr[,substring(colnames(tnbc_all_expr),14,15) == '01']
nontnbc_all_expr=nontnbc_all_expr[,substring(colnames(nontnbc_all_expr),14,15) == '01']
exprSet=cbind(tnbc_all_expr,nontnbc_all_expr)
group_list=c(rep('tnbc',ncol(tnbc_all_expr)),rep('nontnbc',ncol(nontnbc_all_expr)))
if(T){
suppressMessages(library(limma))
design <- model.matrix(~0+factor(group_list))
colnames(design)=levels(factor(group_list))
rownames(design)=colnames(exprSet)
design
dge <- DGEList(counts=exprSet)
dge <- calcNormFactors(dge)
logCPM <- cpm(dge, log=TRUE, prior.count=3)
v <- voom(dge,design,plot=TRUE, normalize="quantile")
fit <- lmFit(v, design)
group_list
cont.matrix=makeContrasts(contrasts=c('tnbc-nontnbc'),levels = design)
fit2=contrasts.fit(fit,cont.matrix)
fit2=eBayes(fit2)
tempOutput = topTable(fit2, coef='tnbc-nontnbc', n=Inf)
DEG_limma_voom = na.omit(tempOutput)
head(DEG_limma_voom)
}
library(edgeR)
if(T){
suppressMessages(library(limma))
design <- model.matrix(~0+factor(group_list))
colnames(design)=levels(factor(group_list))
rownames(design)=colnames(exprSet)
design
dge <- DGEList(counts=exprSet)
dge <- calcNormFactors(dge)
logCPM <- cpm(dge, log=TRUE, prior.count=3)
v <- voom(dge,design,plot=TRUE, normalize="quantile")
fit <- lmFit(v, design)
group_list
cont.matrix=makeContrasts(contrasts=c('tnbc-nontnbc'),levels = design)
fit2=contrasts.fit(fit,cont.matrix)
fit2=eBayes(fit2)
tempOutput = topTable(fit2, coef='tnbc-nontnbc', n=Inf)
DEG_limma_voom = na.omit(tempOutput)
head(DEG_limma_voom)
}
deg=DEG_limma_voom
with(deg,plot( logFC,-log10( adj.P.Val)))
library(ggplot2)
library(clusterProfiler)
library(org.Hs.eg.db)
diff1=rownames(deg[abs(deg$logFC)>3,])
library(pheatmap)
View(dge)
View(deg)
library(pheatmap)
dat[1:4,1:4]
dat=exprSet
dat[1:4,1:4]
cg=rownames(deg[abs(deg$logFC)>3,])
mat=dat[cg,]
library(pheatmap)
pheatmap(mat,show_colnames =F,show_rownames = F)
dat=log2(edgeR::cpm(exprSet+1))
dat[1:4,1:4]
cg=rownames(deg[abs(deg$logFC)>3,])
mat=dat[cg,]
library(pheatmap)
pheatmap(mat,show_colnames =F,show_rownames = F)
n=t(scale(t(mat)))
n[n>2]=2
n[n< -2]= -2
n[1:4,1:4]
pheatmap(n,show_colnames =F,show_rownames = F)
ac=data.frame(g=group_list)
rownames(ac)=colnames(n)
pheatmap(n,show_colnames =F,show_rownames = F,
annotation_col=ac )
ac
ensemb_genes=rownames(deg)
library(stringr)
class(str_split(ensemb_genes,'[.]',simplify = T))
class(unlist(str_split(ensemb_genes,'[.]')))
deg$ensembl_id=str_split(ensemb_genes,'[.]',simplify = T)[,1]
library(org.Hs.eg.db)
g2s=toTable(org.Hs.egSYMBOL)
g2e=toTable(org.Hs.egENSEMBL)
b=merge(deg,g2e,by='ensembl_id',all.x=T)
d=merge(b,g2s,by='gene_id',all.x=T)
table(d$ensembl_id)[table(d$ensembl_id)>1]
View(deg)
View(d)
d=d[order(d$V1),]
d=d[!duplicated(d$V1),]
d=d[match(ensemb_genes,d$V1),]
View(d)
ensemb_genes=rownames(deg)
deg$ensemb_genes=rownames(deg)
library(stringr)
class(str_split(ensemb_genes,'[.]',simplify = T))
class(unlist(str_split(ensemb_genes,'[.]')))
deg$ensembl_id=str_split(ensemb_genes,'[.]',simplify = T)[,1]
library(org.Hs.eg.db)
g2s=toTable(org.Hs.egSYMBOL)
g2e=toTable(org.Hs.egENSEMBL)
b=merge(deg,g2e,by='ensembl_id',all.x=T)
d=merge(b,g2s,by='gene_id',all.x=T)
table(d$ensembl_id)[table(d$ensembl_id)>1]
d=d[order(d$ensemb_genes),]
d=d[!duplicated(d$ensemb_genes),]
d=d[match(ensemb_genes,d$ensemb_genes),]
View(d)
View(deg)
write.csv(d,'tnbc-vs-nonTNBC-TCGA-by-limma-voom.csv')
View(d)
deg=d
library(ggplot2)
library(clusterProfiler)
View(deg)
diff1= deg[abs(deg$logFC)>3,1]
diffg= deg[abs(deg$logFC)>3,1]
diffg
diffg=na.omit(diffg)
diffg
diffg=as.numeric(na.omit(diffg))
diffg=as.numeric(na.omit(diffg))
diffg
kk  <- enrichKEGG(gene         = diffg,
organism     = 'hsa',
pvalueCutoff = 0.9,
qvalueCutoff =0.9)
head(kk)[,1:6]
dotplot(kk)
deg=na.omit(deg)
geneList=deg$logFC
names(geneList)=deg$gene_id
geneList=sort(geneList,decreasing = T)
###  GSEA
kk_gse <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 120,
pvalueCutoff = 0.9,
verbose      = FALSE)
head(kk_gse)[,1:6]
gseaplot(kk_gse, geneSetID = rownames(kk_gse[1,]))
dotplot(kk_gse)
kk_gse
setReadable
?setReadable
setReadable(kk_gse, OrgDb='org.Hs.eg.db')
DOSE::setReadable(kk_gse, OrgDb='org.Hs.eg.db')
DOSE::setReadable(kk_gse, OrgDb='org.Hs.eg.db',keytype='ENTREZID')
kk_gse=DOSE::setReadable(kk_gse, OrgDb='org.Hs.eg.db',keytype='ENTREZID')
write.csv(kk_gse@result,'kk_gse.csv')
kk=DOSE::setReadable(kk, OrgDb='org.Hs.eg.db',keytype='ENTREZID')
write.csv(kk@result,'kk.csv')
gseaplot(kk_gse, geneSetID = rownames(kk_gse[1,]))
pheatmap(n,show_colnames =F,show_rownames = F,
annotation_col=ac )
pheatmap(n,show_colnames =F,show_rownames = F,
annotation_col=ac ,filename = 'tnbc-vs-nonTNBC-TCGA-top300-DEG-heatmap.png')
dotplot(kk)
dev.off()
dotplot(kk)
dotplot(kk_gse)
gseaplot(kk_gse, geneSetID = rownames(kk_gse[4,]))
rm(list = ls())
options(stringsAsFactors = F)
library(data.table)
## 下面的文件来自于UCSC的XENA：BRCA.htseq_counts.tsv
f='/Users/jmzeng/data/public/TCGA/TCGA-BRCA.htseq_counts.tsv'
a=fread(f,sep = '\t',header = T)
a=as.data.frame(a)
a[1:4,1:4]
rownames(a)=a[,1]
a=a[,-1]
genes=rownames(a)
a[1:4,1:4]
a=2^a-1
a[1:4,1:4]
save(a,file = 'TCGA-BRCA.htseq_counts.Rdata')
RNAseq_expr=a
RNAseq_expr=RNAseq_expr[apply(RNAseq_expr,1, function(x) sum(x>1) > 5),]
dim(RNAseq_expr)
RNAseq_expr=RNAseq_expr[apply(RNAseq_expr,1, function(x) sum(x>1) > 20),]
RNAseq_expr=RNAseq_expr[apply(RNAseq_expr,1, function(x) sum(x>1) > 50),]
dim(RNAseq_expr)
RNAseq_expr=log(edgeR::cpm(RNAseq_expr)+1)
head(colnames(RNAseq_expr))
load('../MAF/math.Rdata')
math=as.data.frame(unlist(math))
rownames(math)=substring(rownames(math),1,16)
colnames(math)='math'
View(math)
RNAseq_expr=RNAseq_expr[,colnames(RNAseq_expr) %in% rownames(math)]
dim(RNAseq_expr)
cor(math,dim(RNAseq_expr))
cor(math,RNAseq_expr )
math=math[colnames(RNAseq_expr)]
colnames(RNAseq_expr)
View(math)
math=math[colnames(RNAseq_expr),]
dim(RNAseq_expr)
cor(math,RNAseq_expr )
load('../MAF/math.Rdata')
math=as.data.frame(unlist(math))
rownames(math)=substring(rownames(math),1,16)
colnames(math)='math'
math=math[colnames(RNAseq_expr),drop=F]
math=math[colnames(RNAseq_expr),drop=T]
math=math[colnames(RNAseq_expr),,drop=T]
load('../MAF/math.Rdata')
math=as.data.frame(unlist(math))
rownames(math)=substring(rownames(math),1,16)
colnames(math)='math'
math=math[colnames(RNAseq_expr),,drop=F]
dim(RNAseq_expr)
cor(math,RNAseq_expr )
apply(RNAseq_expr,2,function(x){
cor(x,math)
})
apply(RNAseq_expr,2,function(x){
cor(x,as.numeric(math))
})
as.numeric(math)
apply(RNAseq_expr,2,function(x){
cor(x,as.vector(math))
})
as.vector(math)
cor(x,math[,1]
})
apply(RNAseq_expr,2,function(x){
cor(x,math[,1])
})
math[,1]
dim(RNAseq_expr)
cor(RNAseq_expr[,1],math[,1])
RNAseq_expr[,1]
cor(as.numeric(RNAseq_expr[,1]),math[,1])
length(RNAseq_expr[,1])
apply(RNAseq_expr,1,function(x){
cor(x,math[,1])
})
tmp = apply(RNAseq_expr,1,function(x){
cor(x,math[,1])
})
tmp=as.data.frame(tmp)
View(tmp)
deg=tmp
ensemb_genes=rownames(deg)
deg$ensemb_genes=rownames(deg)
library(stringr)
class(str_split(ensemb_genes,'[.]',simplify = T))
class(unlist(str_split(ensemb_genes,'[.]')))
deg$ensembl_id=str_split(ensemb_genes,'[.]',simplify = T)[,1]
library(org.Hs.eg.db)
g2s=toTable(org.Hs.egSYMBOL)
g2e=toTable(org.Hs.egENSEMBL)
b=merge(deg,g2e,by='ensembl_id',all.x=T)
d=merge(b,g2s,by='gene_id',all.x=T)
table(d$ensembl_id)[table(d$ensembl_id)>1]
d=d[order(d$ensemb_genes),]
d=d[!duplicated(d$ensemb_genes),]
d=d[match(ensemb_genes,d$ensemb_genes),]
deg=d
library(ggplot2)
library(clusterProfiler)
library(org.Hs.eg.db)
View(deg)
boxplot(deg$tmp)
boxplot(abs(deg$tmp))
fivenum(abs(deg$tmp))
diffg= deg[abs(deg$tmp)>0.2,1]
diffg=as.numeric(na.omit(diffg))
kk  <- enrichKEGG(gene         = diffg,
organism     = 'hsa',
pvalueCutoff = 0.9,
qvalueCutoff =0.9)
head(kk)[,1:6]
dotplot(kk)
deg=na.omit(deg)
geneList=deg$tmp
names(geneList)=deg$gene_id
geneList=sort(geneList,decreasing = T)
###  GSEA
kk_gse <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 120,
pvalueCutoff = 0.9,
verbose      = FALSE)
###  GSEA
kk_gse <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 10,
pvalueCutoff = 0.9,
verbose      = FALSE)
head(kk_gse)[,1:6]
dotplot(kk_gse)
tmp=kk_gse@result
View(tmp)
